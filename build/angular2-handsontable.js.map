{"version":3,"sources":["webpack:///angular2-handsontable.js","webpack:///./components/index.ts?3f42","webpack:///./components/handsontable/handsontable.ts?0ef0"],"names":["webpackJsonp","module","exports","__webpack_require__",14,"__export","m","p","hasOwnProperty",84,"__decorate","this","decorators","target","key","desc","Reflect","decorate","arguments","length","reduceRight","o","d","__metadata","k","v","metadata","angular2_1","eventNames","HotTable","HotTable.constructor","HotTable.parseAutoComplete","row","inst","getSelected","data","dataSet","fieldParts","relatedField","split","i","process","map","item","column","optionField","HotTable.onInit","_a","HotTable.onDestroy","ElementRef","handsontable"],"mappings":"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","file":"angular2-handsontable.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(14);\n\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports, __webpack_require__) {\n\n\t///<reference path=\"../tsd.d.ts\"/>\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(84));\r\n\t//# sourceMappingURL=index.js.map\n\n/***/ },\n\n/***/ 84:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n\t    switch (arguments.length) {\r\n\t        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n\t        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n\t        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n\t    }\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar angular2_1 = __webpack_require__(5);\r\n\tvar eventNames = ['afterCellMetaReset', 'afterChange',\r\n\t    'afterCreateCol', 'afterCreateRow', 'afterDeselect',\r\n\t    'afterDestroy', 'afterDocumentKeyDown', 'afterGetCellMeta', 'afterGetColHeader', 'afterGetRowHeader',\r\n\t    'afterInit', 'afterIsMultipleSelectionCheck', 'afterLoadData',\r\n\t    'afterMomentumScroll', 'afterOnCellCornerMouseDown',\r\n\t    'afterOnCellMouseDown', 'afterOnCellMouseOver', 'afterRemoveCol', 'afterRemoveRow', 'afterRender',\r\n\t    'afterRenderer', 'afterScrollHorizontally', 'afterScrollVertically',\r\n\t    'afterSelection', 'afterSelectionByProp',\r\n\t    'afterSelectionEnd', 'afterSelectionEndByProp', 'afterSetCellMeta', 'afterUpdateSettings', 'afterValidate',\r\n\t    'beforeAutofill', 'beforeCellAlignment', 'beforeChange', 'beforeChangeRender', 'beforeDrawBorders',\r\n\t    'beforeGetCellMeta', 'beforeInit', 'beforeInitWalkontable', 'beforeKeyDown', 'beforeOnCellMouseDown',\r\n\t    'beforeRemoveCol', 'beforeRemoveRow', 'beforeRender', 'beforeSetRangeEnd', 'beforeTouchScroll',\r\n\t    'beforeValidate', 'construct', 'init', 'modifyCol', 'modifyColWidth', 'modifyRow', 'modifyRowHeight',\r\n\t    'persistentStateLoad', 'persistentStateReset', 'persistentStateSave'];\r\n\tvar HotTable = (function () {\r\n\t    function HotTable(element) {\r\n\t        var _this = this;\r\n\t        this.element = element;\r\n\t        this.data = [];\r\n\t        eventNames.forEach(function (eventName) {\r\n\t            _this[eventName] = new angular2_1.EventEmitter();\r\n\t        });\r\n\t    }\r\n\t    HotTable.prototype.parseAutoComplete = function (column, dataSet) {\r\n\t        var inst = this.inst;\r\n\t        if (typeof column.source === 'string') {\r\n\t            var relatedField = column.source;\r\n\t            column.source = function (query, process) {\r\n\t                var row = inst.getSelected()[0];\r\n\t                var data = dataSet[row];\r\n\t                if (!data) {\r\n\t                    return;\r\n\t                }\r\n\t                var fieldParts = relatedField.split('.');\r\n\t                var o = data;\r\n\t                for (var i = 0; i < fieldParts.length; i++) {\r\n\t                    o = o[fieldParts[i]];\r\n\t                }\r\n\t                process(o.map(function (item) {\r\n\t                    return !column.optionField ? item : item[column.optionField];\r\n\t                }));\r\n\t            };\r\n\t        }\r\n\t    };\r\n\t    HotTable.prototype.onInit = function () {\r\n\t        var _this = this;\r\n\t        this.view = document.createElement('div');\r\n\t        this.view.class = 'handsontable-container';\r\n\t        this.element.nativeElement.appendChild(this.view);\r\n\t        var htOptions = {\r\n\t            data: this.data\r\n\t        };\r\n\t        eventNames.forEach(function (eventName) {\r\n\t            htOptions[eventName] = function (data) {\r\n\t                _this[eventName].next(data);\r\n\t            };\r\n\t        });\r\n\t        var additionalFields = ['colHeaders', 'colWidths', 'columns'];\r\n\t        additionalFields.forEach(function (field) {\r\n\t            if (_this[field]) {\r\n\t                Object.assign(htOptions, (_a = {},\r\n\t                    _a[field] = _this[field],\r\n\t                    _a\r\n\t                ));\r\n\t            }\r\n\t            var _a;\r\n\t        });\r\n\t        if (this.options) {\r\n\t            Object.assign(htOptions, this.options);\r\n\t        }\r\n\t        this.inst = Handsontable(this.view, htOptions);\r\n\t        if (this.columns && this.columns.length) {\r\n\t            this.columns.forEach(function (column) {\r\n\t                _this.parseAutoComplete(column, _this.data);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    HotTable.prototype.onDestroy = function () {\r\n\t        if (this.view) {\r\n\t            this.view.remove();\r\n\t        }\r\n\t    };\r\n\t    HotTable = __decorate([\r\n\t        angular2_1.Directive({\r\n\t            selector: 'hot-table',\r\n\t            properties: [\r\n\t                'data',\r\n\t                'colHeaders',\r\n\t                'columns',\r\n\t                'colWidths',\r\n\t                'options'\r\n\t            ],\r\n\t            events: eventNames\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [angular2_1.ElementRef])\r\n\t    ], HotTable);\r\n\t    return HotTable;\r\n\t})();\r\n\texports.HotTable = HotTable;\r\n\texports.handsontable = [HotTable];\r\n\t//# sourceMappingURL=handsontable.js.map\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** angular2-handsontable.js\n **/","///<reference path=\"../tsd.d.ts\"/>\n\nexport * from './handsontable/handsontable';\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/index.ts\n **/","/// <reference path=\"../../typings/tsd.d.ts\" />\n\nimport {OnInit, OnDestroy, Directive, EventEmitter, ElementRef} from 'angular2/angular2';\n\ndeclare var Handsontable:Function;\n\nlet eventNames:Array<string> = ['afterCellMetaReset', 'afterChange',\n  'afterCreateCol', 'afterCreateRow', 'afterDeselect',\n  'afterDestroy', 'afterDocumentKeyDown', 'afterGetCellMeta', 'afterGetColHeader', 'afterGetRowHeader',\n  'afterInit', 'afterIsMultipleSelectionCheck', 'afterLoadData',\n  'afterMomentumScroll', 'afterOnCellCornerMouseDown',\n  'afterOnCellMouseDown', 'afterOnCellMouseOver', 'afterRemoveCol', 'afterRemoveRow', 'afterRender',\n  'afterRenderer', 'afterScrollHorizontally', 'afterScrollVertically',\n  'afterSelection', 'afterSelectionByProp',\n  'afterSelectionEnd', 'afterSelectionEndByProp', 'afterSetCellMeta', 'afterUpdateSettings', 'afterValidate',\n  'beforeAutofill', 'beforeCellAlignment', 'beforeChange', 'beforeChangeRender', 'beforeDrawBorders',\n  'beforeGetCellMeta', 'beforeInit', 'beforeInitWalkontable', 'beforeKeyDown', 'beforeOnCellMouseDown',\n  'beforeRemoveCol', 'beforeRemoveRow', 'beforeRender', 'beforeSetRangeEnd', 'beforeTouchScroll',\n  'beforeValidate', 'construct', 'init', 'modifyCol', 'modifyColWidth', 'modifyRow', 'modifyRowHeight',\n  'persistentStateLoad', 'persistentStateReset', 'persistentStateSave'];\n\n@Directive({\n  selector: 'hot-table',\n  properties: [\n    'data',\n    'colHeaders',\n    'columns',\n    'colWidths',\n    'options'\n  ],\n  events: eventNames\n})\nexport class HotTable implements OnInit, OnDestroy{\n  private inst:any;\n  private view:any;\n\n  private data:Array<any> = [];\n  private colHeaders:Array<string>;\n  private columns:Array<any>;\n  private colWidths:Array<number>;\n  private options:any;\n\n  constructor(private element:ElementRef) {\n    // fill events dynamically\n    eventNames.forEach(eventName => {\n      this[eventName] = new EventEmitter();\n    });\n  }\n\n  parseAutoComplete(column, dataSet) {\n    let inst = this.inst;\n\n    if (typeof column.source === 'string') {\n      let relatedField:string = column.source;\n      column.source = function (query, process) {\n        let row:number = inst.getSelected()[0];\n        let data:any = dataSet[row];\n\n        if (!data) {\n          return;\n        }\n\n        let fieldParts:Array<string> = relatedField.split('.');\n        let o:any = data;\n        for (let i = 0; i < fieldParts.length; i++) {\n          o = o[fieldParts[i]];\n        }\n\n        process(o.map(item => {\n          return !column.optionField ? item : item[column.optionField];\n        }));\n      };\n    }\n  }\n\n  onInit() {\n    this.view = document.createElement('div');\n    this.view.class = 'handsontable-container';\n    this.element.nativeElement.appendChild(this.view);\n\n    let htOptions:any = {\n      data: this.data\n    };\n\n    eventNames.forEach(eventName => {\n      htOptions[eventName] = data => {\n        this[eventName].next(data);\n      };\n    });\n\n    let additionalFields:Array<string> = ['colHeaders', 'colWidths', 'columns'];\n    additionalFields.forEach(field => {\n      if (this[field]) {\n        Object.assign(htOptions, {\n          [field]: this[field]\n        });\n      }\n    });\n\n    if (this.options) {\n      Object.assign(htOptions, this.options);\n    }\n\n    this.inst = Handsontable(this.view, htOptions);\n\n    if (this.columns && this.columns.length) {\n      this.columns.forEach(column => {\n        this.parseAutoComplete(column, this.data);\n      });\n    }\n  }\n\n  onDestroy() {\n    if (this.view) {\n      this.view.remove();\n    }\n  }\n}\n\nexport const handsontable:Array<any> = [HotTable];\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/handsontable/handsontable.ts\n **/"],"sourceRoot":""}